{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string"
    },
    "storageName": {
      "type": "string"
    },
    "storageID": {
      "type": "string"
    },
    "storageRef": {
      "type": "string"
    },
    "vnetName": {
      "type": "string"
    },
    "subnetName": {
      "type": "string"
    },
    "subnetId": {
      "type": "string"
    },
    "nsgName": {
      "type": "string"
    },
    "dbNewOrExisting": {
      "type": "string"
    },
    "dbVMName": {
      "type": "string"
    },
    "dbType": {
      "type": "string"
    },
    "dbName": {
      "type": "string"
    },
    "dbPort": {
      "type": "int"
    },
    "dbTablespace": {
      "type": "string"
    },
    "dbUser": {
      "type": "string"
    },
    "dbPassword": {
      "type": "securestring"
    },
    "nodeVMSize": {
      "type": "string"
    },
    "nodeVMOSType": {
      "type": "string"
    },
    "nodeVMAdminUsername": {
      "type": "string",
      "minLength": 1
    },
    "nodeVMAdminPassword": {
      "type": "securestring"
    },
    "nodeVMAdminSshPublicKey": {
      "type": "securestring"
    },
    "nodeVMNamePrefix": {
      "type": "string",
      "minLength": 1
    },
    "infaVersion": {
      "type": "string"
    },
    "infaDomainName": {
      "type": "string",
      "minLength": 4
    },
    "infaDomainUser": {
      "type": "string",
      "minLength": 4
    },
    "infaDomainPassword": {
      "type": "securestring",
      "minLength": 4
    },
    "infaNodeNamePrefix": {
      "type": "string",
      "minLength": 4
    },
    "infaKeyword": {
      "type": "securestring",
      "minLength": 4
    },
    "infaDomainLicense": {
      "type": "string"
    },
    "baseUrl": {
      "type": "string"
    },
    "mrsdbuser": {
      "type": "string"
    },
    "mrsdbpwd": {
      "type": "securestring"
    },
    "refdatadbuser": {
      "type": "string"
    },
    "refdatadbpwd": {
      "type": "securestring"
    },
    "profiledbuser": {
      "type": "string"
    },
    "profiledbpwd": {
      "type": "securestring"
    },
    "informaticaTags": {
      "type": "object"
    }
  },
  "variables": {
    "index": 0,
    "nodeVMDNSName": "[toLower(concat(parameters('nodeVMNamePrefix'), add(variables('Index'), 1), uniqueString(resourceGroup().id, deployment().name)))]",
    "nodeVMNicPrefix": "[concat(parameters('nodeVMNamePrefix'),'Nic')]",

    "extScriptURI": "[parameters('baseUrl')]",
    "extScriptFile": "lininfainstaller.sh",

    "sshKeyPath": "[concat('/home/',parameters('nodeVMAdminUsername'),'/.ssh/authorized_keys')]",

    "infaNodePort": 6005,
  /*  "dbType": "MSSQLSERVER",
    "dbInstanceName": "infadb",
    "dbPort": "1433", */

    "imagePublisher": "informatica",
    "imageOffer": "data_quality_10_1_1_rhel_7_3_byol-preview",
    "osVersion": "byol_rhel_7_3_data_quality_10_1_1"
  },
    "resources": [
        {
            "name": "[variables('nodeVMDNSName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "location": "[parameters('location')]",
            "apiVersion": "2016-10-01",
         //   "dependsOn": [ ],

            "tags": {
                "displayName": "publicip",
                "provider": "[toUpper(parameters('informaticaTags').provider)]"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('nodeVMDNSName')]"
                }
            }
        },
        {
            "name": "[concat(variables('nodeVMNicPrefix'), add(variables('index'), 1))]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[parameters('location')]",
            "apiVersion": "2016-10-01",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('nodeVMDNSName'))]"
            ],
            "tags": {
                "displayName": "niccard",
                "provider": "[toUpper(parameters('informaticaTags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[parameters('subnetId')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('nodeVMDNSName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                }
            }
        },
      {
        "name": "[concat(parameters('nodeVMNamePrefix'), add(variables('index'), 1))]",
        "type": "Microsoft.Compute/virtualMachines",
        "location": "[parameters('location')]",
        "apiVersion": "2016-03-30",

        "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', variables('nodeVMNicPrefix'), add(variables('index'), 1))]"
        ],
        "tags": {
          "displayName": "nodevm",
          "provider": "[toUpper(parameters('informaticaTags').provider)]"
        },
        "plan": {
                "name": "[variables('osVersion')]",
                "publisher": "[variables('imagePublisher')]",
                "product": "[variables('imageOffer')]"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('nodeVMSize')]"
          },
          "osProfile": {
            "computerName": "[concat(parameters('nodeVMNamePrefix'), add(variables('Index'), 1))]",
            "adminUsername": "[parameters('nodeVMAdminUsername')]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": "true",
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[variables('sshKeyPath')]",
                    "keyData": "[parameters('nodeVMAdminSshPublicKey')]"
                  }
                ]
              }
            }
          },
          "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('osVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "InfaOSDisk",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                      "vhd": {
                        //   "uri": "[concat('https://', parameters('storageName'), '.blob.core.windows.net/vhds/', toLower(parameters('nodeVMNamePrefix')), uniqueString(resourceGroup().id, deployment().name), '.osdisk.vhd')]"
                        "uri": "[concat(parameters('storageRef'), 'vhds/', parameters('nodeVMNamePrefix'), uniqueString(resourceGroup().id), add(variables('index'), 1), '.osdisk.vhd')]"
                      }
                    }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nodeVMNicPrefix'), add(variables('index'), 1)))]"
              }
            ]
          }
        },
        "resources": [
          {
            "name": "ScriptExtGVM",
            "type": "extensions",
            "location": "[parameters('location')]",
            "apiVersion": "2016-03-30",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', parameters('nodeVMNamePrefix'), add(variables('index'), 1))]"
            ],
            "tags": {
              "displayName": "informaticaextension",
              "provider": "[toUpper(parameters('informaticaTags').provider)]"
            },
            "properties": {
              "publisher": "Microsoft.OSTCExtensions",
              "type": "CustomScriptForLinux",
              "typeHandlerVersion": "1.5",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "fileUris": [
                  "[concat(variables('extScriptURI'),  variables('extScriptFile'))]"
                ]
              },
              "protectedSettings": {
                //   "commandToExecute": "[concat('sudo sh ', variables('extScriptFile'), ' ', concat(parameters('nodeVMNamePrefix'), '1'), ' ', parameters('infaDomainName'), ' \"', parameters('infaDomainUser'), '\" \"', parameters('infaDomainPassword'), '\" ', parameters('infaNodeNamePrefix'), add(variables('index'), 1), ' ', variables('infaNodePort'), ' ', variables('dbType'), ' ', variables('dbInstanceName'), ' \"', parameters('dbUser'), '\" \"', parameters('dbPassword'), '\" ', parameters('dbVMName'), ' ', variables('dbPort'), ' \"', parameters('infaKeyword'), '\" ', variables('index'), ' \"', parameters('nodeVMAdminUsername'), '\" \"', parameters('storageName'), '\" ', listKeys(parameters('storageID'), '2016-01-01').keys[0].value, ' \"', parameters('infaDomainLicense'), '\" \"',parameters('mrsdbuser'),'\" \"',parameters('mrsdbpwd'),'\" \"',parameters('refdatadbuser'),'\" \"',parameters('refdatadbpwd'),'\" \"',parameters('profiledbuser'),'\" \"',parameters('profiledbpwd'),'\"')]"
                "commandToExecute": "[concat('sh ', variables('extScriptFile'),' ', parameters('infaVersion'), ' ', concat(parameters('nodeVMNamePrefix'), '1'), ' ', parameters('infaDomainName'), ' \"', parameters('infaDomainUser'), '\" \"', parameters('infaDomainPassword'), '\" ', parameters('infaNodeNamePrefix'), add(variables('index'), 1), ' ', variables('infaNodePort'), ' ', parameters('dbNewOrExisting'),' ', parameters('dbType'), ' ', parameters('dbName'),' ', parameters('dbTablespace'), ' \"', parameters('dbUser'), '\" \"', parameters('dbPassword'), '\" ', parameters('dbVMName'), ' ', parameters('dbPort'), ' \"', parameters('infaKeyword'), '\" ', variables('index'), ' \"', parameters('nodeVMAdminUsername'), '\" \"', parameters('storageName'), '\" ', listKeys(parameters('storageID'), '2016-01-01').keys[0].value, ' \"', parameters('infaDomainLicense'), '\" \"',parameters('mrsdbuser'),'\" \"',parameters('mrsdbpwd'),'\" \"',parameters('refdatadbuser'),'\" \"',parameters('refdatadbpwd'),'\" \"',parameters('profiledbuser'),'\" \"',parameters('profiledbpwd'),'\"')]"
              }
            }
          }
        ]
      }
    ],
    "outputs": {
        "fqdn": {
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('nodeVMDNSName')), '2016-10-01').dnsSettings.fqdn]",
            "type": "string"
        }
    }
}
